# day2

data day2;
input a c d b;
/* input a b c d;
   input f ds  dj jb */  (multi line commentcomment)
* datalines;   (single line comments)
   
cards;
1 12 3 5
3 4 5 5 
2 43 4 5
 44 4 2 2
 ;
 run;
 
 /* data steps read and modify data 
    proc step analyze data and perform utility functions, or print reports  */
    
 
 DATA TEMP;
INPUT ID $ NAME $ SALARY DEPARTMENT $;
COMM = SALARY*0.25;
DENN = ID*2;
LABEL ID = 'EMPLOYEE ID' COMM = 'COMMISION';
DATALINES;
1 RICK 623.3 IT
2 DAN 515.2 OPERATIONS
3 MICHELLE 611 IT
4 RYAN 729 HR
5 GARY 843.25 FINANCE
6 NINA 578 IT
7 SIMON 632.8 OPERATIONS
8 GURU 722.5 FINANCE
;
RUN;


data lib1.dataset1;  /* permanent dataset */
input ...;
..;
run;

data dataset2;   /* temporary dataset */
input 
..
..
...
run;


/* sas temporary datasets are removed automatically after the session completed */


>>> Started strings :)

data strings;
length str1 $6 str2 $4;
str1 = 'hello';
str2 = 'sjdksdss';
joined_strs = str1 || str2;  /* this one joins two strings */
run;

proc print data = strings;
run;

data strings2;
str1 = 'predator';
str2 = 'processor';
str3 = substr(str1, 2,4);  /* and this returns substring from a given string */
str4 = substr(str2, 3);
run;

proc print data= strings2 noobs;
run;




data emppl;
length str1 $ 20;
str1  = 'sjdfladsfh   ';
len1 = lengthc(str1);
len2 = lengthc(TRIMN(str1));  /* this one here trims the string i.e removes extra spaces */
run;

proc print data= emppl noobs;  /* noobs removes obs count */
run;



>>> ARRAYS 

Syntax for declaring an array 
   >>> " ARRAY ARRAY-NAME(SUBSCRIPT) ($) VARIABLE-LIST ARRAY-VALUES "
   
